import "jvm_op.stg"
import "jvm_io.stg"

yapl(name, statements) ::= <<

.class public $name$
.super java/lang/Object

.method public static main([Ljava/lang/String;)V
	.limit stack 	512
	.limit locals 	512

	$statements; separator="\n"$

	return
.end method

$readFunctions(name)$
>>

opExprBlock(statements, expression) ::= <<
$statements; separator="\n"$
$expression$
>>

opIfThenElse(conditional, exprTrue, exprFalse, lto, lgoto) ::= <<
$conditional$
iconst_1
if_icmpne		$lto$
$exprTrue$
goto			$lgoto$
$lto$:
$exprFalse$
$lgoto$:
>>

opWhile(conditional, body, lto, lgoto, popmaybe) ::= <<
goto		$lto$
$lgoto$:
$body$
$popmaybe$
$lto$:
iconst_1
$conditional$
if_icmpeq	$lgoto$
>>

declareVar(constant, type, offset) ::= <<
$constant$
$type$store $offset$
>>



assign(type, offset, expression) ::= <<
$expression$
dup
$type$store		$offset$
>>

pop() ::= <<
pop
>>

